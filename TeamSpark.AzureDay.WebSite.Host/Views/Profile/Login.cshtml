@using TeamSpark.AzureDay.WebSite.Config
@model TeamSpark.AzureDay.WebSite.Host.Models.Profile.LoginModel

@{
	ViewBag.Title = $"AzureDay {Configuration.Year} - вход";
}

<div class="boxedcontent">
	@Html.Action("Header", "Layout")

	<div class="container">
		<div class="row">
			<div class="col-md-12">

				<div>
					&nbsp;
				</div>

				<h1>Вход в личный кабинет участника</h1>

				@if (!string.IsNullOrWhiteSpace(Model.ErrorMessage))
				{
					<div>@Model.ErrorMessage</div>
				}

				<div class="col-md-6">
					<form method="POST" data-bind="submit: showModal">
						<div class="input-group myInputGroupdivider">
							<span class="input-group-addon" style="width: 150px;">Email</span>
							<input class="form-control" type="email" name="Email" placeholder="Email" data-bind="textInput: email" value="@Model.Email" style="width: 250px;" />
						</div>

						<div class="input-group myInputGroupdivider">
							<span class="input-group-addon" style="width: 150px;">Пароль</span>
							<input class="form-control" type="password" name="Password" placeholder="Пароль" data-bind="textInput: password" value="@Model.Password" style="width: 250px;" />
						</div>

						<button class="btn btn-primary" type="submit" data-bind="enable: isModelValid">Войти</button>
					</form>
				</div>

				<div class="col-md-6">
					<form method="POST" data-bind="submit: showModal" action="/profile/restorepassword">
						<div class="input-group myInputGroupdivider">
							<span class="input-group-addon" style="width: 150px;">Email</span>
							<input class="form-control" type="email" name="Email" placeholder="Email" value="@Model.Email" style="width: 250px;" />
						</div>
						<button class="btn btn-primary" type="submit">Восстановить пароль</button>
					</form>
				</div>

			</div>
		</div>
	</div>

	@Html.Action("Footer", "Layout")
</div>


			@Html.Partial("_ModalWait")

			@section Scripts
{
				@Scripts.Render("~/cdn/knockout/js")

				<script>
					$(document).ready(function () {
						var loginModel = {
							email: ko.observable(''),
							password: ko.observable('')
						};

						loginModel.isModelValid = ko.computed(function () {
							var email = loginModel.email();
							var password = loginModel.password();

							return !!email && !!password;
						});

						loginModel.showModal = function () {
							setTimeout(function () {
								modal.showModal();
							});
							return true;
						}

						ko.applyBindings(loginModel);
					});
				</script>
			}
