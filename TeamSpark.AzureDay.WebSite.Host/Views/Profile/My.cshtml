@using TeamSpark.AzureDay.WebSite.Config
@using TeamSpark.AzureDay.WebSite.Data.Enum
@using TeamSpark.AzureDay.WebSite.Localization.Host.Views.Profile
@model TeamSpark.AzureDay.WebSite.Host.Models.Profile.MyProfileModel

@{
	ViewBag.Title = $"AzureDay {Configuration.Year} - {My.PersonalCabinet}";
}

<div class="boxedcontent">
	@Html.Action("Header", "Layout")

	<div class="container">
		<div class="row">
			<div class="col-md-12">

				<div>
					&nbsp;
				</div>

				<h1>@My.PersonalCabinet <span class='colortext'>AzureDay @Configuration.Year</span></h1>

				<div id="divProfile" class="col-md-6">
					<h2>@My.MyProfile</h2>
					<form method="POST" data-bind="submit: showModal">

						<div class="input-group myInputGroupdivider">
							<span class="input-group-addon" style="width: 150px;">Email</span>
							<input class="form-control" name="email" readonly="readonly" disabled="disabled" value="@Model.Email" style="width: 250px;"/>
						</div>

						<div class="input-group myInputGroupdivider">
							<span class="input-group-addon" style="width: 150px;">@My.Password</span>
							<input type="password" class="form-control" name="password" data-bind="textInput: password" style="width: 250px;"/>
						</div>
						<div class="input-group myInputGroupdivider">
							<span class="input-group-addon" style="width: 150px;">@My.PasswordAgain</span>
							<input type="password" class="form-control" name="password2" data-bind="textInput: password2" style="width: 250px;" />
						</div>

						<div class="input-group myInputGroupdivider">
							<span class="input-group-addon" style="width: 150px;">@My.FirstName</span>
							<input class="form-control" name="firstName" data-bind="textInput: fName" placeholder="@My.FirstName" value="@Model.FirstName" style="width: 250px;"/>
						</div>
						<div class="input-group myInputGroupdivider">
							<span class="input-group-addon" style="width: 150px;">@My.LastName</span>
							<input class="form-control" name="lastName" data-bind="textInput: lName" placeholder="@My.LastName" value="@Model.LastName" style="width: 250px;"/>
						</div>
						<div class="input-group myInputGroupdivider">
							<span class="input-group-addon" style="width: 150px;">@My.CompanyName</span>
							<input class="form-control" name="company" data-bind="textInput: company" placeholder="@My.CompanyName" value="@Model.Company" style="width: 250px;"/>
						</div>

						<button class="btn btn-primary" type="submit" data-bind="enable: isModelValid() && isPasswordValid() && isPasswordLengthValid()">@My.Save</button>

						<div style="width: 400px; margin-top: 15px; display: none;" class="alert alert-warning" data-bind="style: { display: isPasswordValid() ? 'none' : 'block' }">Пароли должны совпадать</div>

						<div style="width: 400px; margin-top: 15px; display: none;" class="alert alert-warning" data-bind="style: { display: isPasswordLengthValid() ? 'none' : 'block' }">Минимальная длина пароля 6 символов</div>

						<div style="width: 400px; margin-top: 15px; display: none;" class="alert alert-warning" data-bind="style: { display: isModelValid() ? 'none' : 'block' }">Все поля обязательны для заполнения</div>

					</form>
				</div>

				<div id="divTicket" class="col-md-6">
					<h2>@My.MyTicket</h2>

					@if (Model.PayedConferenceTicket == null)
					{
						<div>
							<form id="formPay" method="POST" action="/profile/pay">
								<div class="input-group myInputGroupdivider">
									<span class="input-group-addon" style="width: 150px;">@My.ConfTicketType</span>
									<select class="form-control" name="ticketType" data-bind="options: tickets, optionsValue: 'id', optionsText: 'title', value: selectedTicket" style="width: 250px;"></select>
								</div>
								<div class="input-group myInputGroupdivider">
									<span class="input-group-addon" style="width: 150px;">@My.ConfTicketCode</span>
									<input class="form-control" name="promoCode" placeholder="Промо код" data-bind="textInput: promoCode" style="width: 250px;" />
								</div>
								<div class="input-group myInputGroupdivider">
									<span class="input-group-addon" style="width: 150px;">@My.ConfTicketPrice</span>
									<input class="form-control" readonly="readonly" disabled="disabled" data-bind="value: currentPrice" style="width: 250px;"/>
								</div>
								<input id="paymentType" name="paymentType" type="hidden"/>
								<a href="#" id="btnPayKaznackey" class="btn btn-primary">Оплатить картой</a>
								<a href="#" id="btnPayLiqPay" class="btn btn-primary">@My.PayViaLiqPay</a>
								@foreach (var ticket in Model.Tickets.Where(t => !string.IsNullOrEmpty(t.TicketNotes)))
								{
									<div style="width: 400px; margin-top: 15px; display: none;" data-bind="visible: '@ticket.TicketType' == selectedTicket()" class="alert alert-warning">@ticket.TicketNotes</div>
								}
							</form>
						</div>
					}
					else
					{
						if (Model.PayedConferenceTicket.IsPayed)
						{
							<div>
								<div class="wow-pricing-table col-md-12">
									<div class="wow-pricing featured wow-column-">
										<div class="wow-pricing-header" style="padding-bottom: 0px;">
											<h5>AzureDay @Configuration.Year</h5>
											<div class="wow-pricing-cost">
												<img id="imgGravatar" style="display: none; padding-bottom: 10px;"/>
												<p style="font-weight: bold;">@($"{Model.FirstName} {Model.LastName}")</p>
												<p>@Model.Company</p>
												<p>&nbsp;</p>
											</div>
										</div>
										<div class="wow-pricing-content">
											<ul>
												<li>
													Участник (@Model.PayedConferenceTicket.TicketType.ToDisplayString())
												</li>
											</ul>
										</div>
									</div>
								</div>
							</div>
							<div>
								<p>Для того, чтобы прийти на AzureDay, вам не нужно печатать билет. Вместо этого вам необходимо запомнить, какие ФИО и какой адрес электронной почты вы вводили при регистрации на конференцию. Эту информацию вам необходимо будет предоставить при входе на конференцию.</p>
							</div>
						}
						else
						{
							<div>
								<p>
									Большое спасибо, ваш платеж обрабатывается. Вы получите подтверждение на адрес электронной почты как только мы подтвердим оплату. Вы можете получить подтверждение о списании средств с вашей карты раньше нас, но не переживайте, мы все равно увидим вашу оплату если она была успешной.
								</p>
								<p>
									Если вы не совершили оплату, то вы можете повторно перейти на форму оплаты используя <a href="/Profile/PayAgain">ссылку</a>.
								</p>
								<p>
									Если вы хотите сбросить данные в форме заказа билета, нажмите на <a href="/Profile/DeleteTicket">ссылку</a>. Обратите внимание, что вы не можете сбросить успешно оплаченный билет. Вы также не можете отменить оплату, если она уже прошла.
								</p>
								<p>
									Если у вас возникли вопросы по оплате, вы можете написать письмо на адрес <a href="mailto:pay@azureday.net">pay@azureday.net</a> и мы поможем вам решить все ваши вопросы.
								</p>
							</div>
						}
					}

				</div>
			</div>
		</div>
	</div>

	@Html.Action("Footer", "Layout")

	@Html.Partial("_ModalWait")

</div>

@section Scripts
{
	@Scripts.Render("~/cdn/knockout/js")

	<script>
		$(document).ready(function() {
			(function profile() {
				var profileModel = {
					fName: ko.observable('@Model.FirstName'),
					lName: ko.observable('@Model.LastName'),
					password: ko.observable(''),
					password2: ko.observable(''),
					company: ko.observable('@Model.Company')
				};
				profileModel.isPasswordLengthValid = ko.computed(function() {
					var password = profileModel.password();
					var password2 = profileModel.password2();
					var isPasswordLengthValid;
					if (!password && !password2) {
						isPasswordLengthValid = true;
					} else {
						var length = Math.min(password.length, password2.length);
						isPasswordLengthValid = length >= 6;
					}
					return isPasswordLengthValid;
				});
				profileModel.isPasswordValid = ko.computed(function() {
					var password = profileModel.password();
					var password2 = profileModel.password2();
					var isPasswordValid;
					if (!password && !password2) {
						isPasswordValid = true;
					} else {
						isPasswordValid = password == password2;
					}
					return isPasswordValid;
				});
				profileModel.isModelValid = ko.computed(function() {
					var fName = profileModel.fName();
					var lName = profileModel.lName();
					var company = profileModel.company();
					return !!fName && !!lName && !!company;
				});
				profileModel.showModal = function() {
					setTimeout(function() {
						modal.showModal();
					});
					return true;
				}
				ko.applyBindings(profileModel, document.getElementById('divProfile'));
			})();

			(function ticket() {
				var ticketModel = {
					tickets: ko.observableArray([
						@Html.Raw(string.Join(",", Model.Tickets.Select(ticket => $"{{ id:'{ticket.TicketType}', title:'{ticket.TicketName}' }}")))
					]),
					selectedTicket: ko.observable(),
					promoCode: ko.observable(),
					currentPrice: ko.observable()
				};

				function calculateNewPrice(ticketType, promoCode) {
					$.get('/api/tickets/price?ticketType=' + ticketType + '&promoCode=' + promoCode, function(data) {
						ticketModel.currentPrice(data + ' грн.');
					});
				}

				ticketModel.promoCode.subscribe(function(newPromoCode) {
					ticketModel.currentPrice(null);
					calculateNewPrice(ticketModel.selectedTicket(), newPromoCode);
				});

				ticketModel.selectedTicket.subscribe(function(newTicket) {
					ticketModel.currentPrice(null);
					calculateNewPrice(newTicket, ticketModel.promoCode());
				});

				ko.applyBindings(ticketModel, document.getElementById('divTicket'));
			})();

			$('#btnPayKaznackey').click(function() {
				$('#paymentType').val('Kaznackey');
				setTimeout(function () {
					modal.showModal();
				});
				$('#formPay').submit();
			});

			$('#btnPayLiqPay').click(function () {
				$('#paymentType').val('LiqPay');
				setTimeout(function () {
					modal.showModal();
				});
				$('#formPay').submit();
			});
		});

		function renderGravatarProfile(profile) {
			if (!profile || !profile.entry || !profile.entry[0]) {
				return;
			}

			var img = $('#imgGravatar');
			img.attr('src', profile.entry[0].thumbnailUrl);
			img.show();
		}
	</script>

	<script src="@($"https://www.gravatar.com/{Model.EmailHash.ToLower()}.json?callback=renderGravatarProfile")"></script>
}